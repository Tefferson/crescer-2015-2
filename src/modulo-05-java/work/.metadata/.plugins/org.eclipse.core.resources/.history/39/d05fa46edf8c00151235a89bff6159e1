package br.com.cwi.test;

import static org.junit.Assert.assertEquals;

import java.util.ArrayList;

import org.junit.Test;

import br.com.cwi.DoublyLinkedList;


public class DoublyLinkedListTest {

	@Test
    public void adicionaPrimeiro() {
        DoublyLinkedList<String> list = new DoublyLinkedList<>();

        list.addFirst("primeiro");

        assertEquals("primeiro", list.list().get(0));
    }
	
	@Test
    public void retornaOPrimeiro() {
        DoublyLinkedList<String> list = new DoublyLinkedList<>();

        list.addFirst("segundo");
        list.addFirst("primeiro");

        assertEquals("primeiro", list.getFirst());
    }
	
	@Test
    public void retornaOUltimo() {
        DoublyLinkedList<String> list = new DoublyLinkedList<>();

        list.addFirst("último");
        list.addFirst("segundo");
        list.addFirst("primeiro");

        assertEquals("último", list.getLast());
    }
	
	@Test
    public void listaEstaVazia() {
        DoublyLinkedList<String> list = new DoublyLinkedList<>();

        list.addFirst("último");
        list.addFirst("segundo");
        list.removeFirst();
        list.removeFirst();

        assertEquals(true, list.isEmpty());
    }
	
	@Test
    public void listaElementos() {
        DoublyLinkedList<String> list = new DoublyLinkedList<>();

        list.addFirst("último");
        list.addFirst("segundo");
        list.addFirst("primeiro");

        ArrayList<String> esperado = new ArrayList<String>();
        esperado.add("primeiro");
        esperado.add("segundo");
        esperado.add("último");
        
        assertEquals(esperado, list.list());
    }
	
	@Test
    public void adicionaUltimo() {
        DoublyLinkedList<String> list = new DoublyLinkedList<>();

        list.addFirst("segundo");
        list.addFirst("primeiro");
        list.addLast("último");

        assertEquals("último", list.list().get(2));
    }
	
	@Test
    public void removeOPrimeiro() {
        DoublyLinkedList<String> list = new DoublyLinkedList<>();

        list.addFirst("segundo");
        list.addFirst("primeiro");
        list.addLast("último");
        
        list.removeFirst();

        assertEquals("segundo", list.getFirst());
    }

	
}
